# Generated by Django 5.0.6 on 2025-04-29 15:22

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('admin_id', models.TextField(blank=True, db_column='Admin_Id', primary_key=True, serialize=False)),
                ('email', models.TextField(blank=True, db_column='Email', null=True, unique=True)),
                ('password', models.TextField(blank=True, db_column='Password', null=True)),
            ],
            options={
                'db_table': 'Administrator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('first_name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('badge_id', models.TextField(blank=True, db_column='Badge_Id', primary_key=True, serialize=False)),
                ('tier_level', models.TextField(blank=True, db_column='Tier_Level', null=True)),
            ],
            options={
                'db_table': 'Badge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.TextField(blank=True, db_column='Department_Id', primary_key=True, serialize=False)),
                ('department_name', models.TextField(db_column='Department_Name')),
            ],
            options={
                'db_table': 'Department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
                ('action_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HealthCard',
            fields=[
                ('health_card_id', models.TextField(blank=True, db_column='Health_Card_Id', primary_key=True, serialize=False)),
                ('health_card_name', models.TextField(db_column='Health_Card_Name')),
                ('health_card_description', models.TextField(blank=True, db_column='Health_Card_Description', null=True)),
            ],
            options={
                'db_table': 'Health_Card',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('record_id', models.AutoField(db_column='Record_Id', primary_key=True, serialize=False)),
                ('record_time', models.DateTimeField(blank=True, db_column='Record_Time', null=True)),
                ('record_date', models.DateField(blank=True, db_column='Record_Date', null=True)),
                ('session_id', models.IntegerField(db_column='Session_Id', unique=True)),
                ('session_duration', models.DurationField(blank=True, db_column='Session_Duration', null=True)),
                ('session_date', models.DateField(blank=True, db_column='Session_Date', null=True)),
            ],
            options={
                'db_table': 'Health_Record',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SkyeAi',
            fields=[
                ('chat_id', models.TextField(blank=True, db_column='Chat_Id', primary_key=True, serialize=False)),
                ('prompt', models.TextField(blank=True, db_column='Prompt', null=True)),
                ('response', models.TextField(blank=True, db_column='Response', null=True)),
            ],
            options={
                'db_table': 'SKYE-AI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.TextField(blank=True, db_column='Team_Id', primary_key=True, serialize=False)),
                ('team_name', models.TextField(db_column='Team_Name')),
            ],
            options={
                'db_table': 'Team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeamSummary',
            fields=[
                ('team_sum_id', models.TextField(blank=True, db_column='Team_Sum_Id', primary_key=True, serialize=False)),
                ('vote_average', models.FloatField(blank=True, db_column='Vote_Average', null=True)),
                ('progress_trend', models.TextField(blank=True, db_column='Progress_Trend', null=True)),
            ],
            options={
                'db_table': 'Team_Summary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.TextField(blank=True, db_column='User_Id', primary_key=True, serialize=False)),
                ('name', models.TextField(db_column='Name')),
                ('email', models.TextField(db_column='Email')),
                ('username', models.TextField(blank=True, db_column='Username', null=True)),
                ('password', models.TextField(blank=True, db_column='Password', null=True)),
                ('role', models.TextField(db_column='Role')),
                ('session_id', models.IntegerField(blank=True, db_column='Session_Id', null=True, unique=True)),
                ('session_duration', models.DurationField(blank=True, db_column='Session_Duration', null=True)),
                ('session_date', models.DateField(blank=True, db_column='Session_Date', null=True)),
                ('view_profile', models.TextField(blank=True, db_column='View_Profile', null=True)),
                ('profile_picture', models.BinaryField(blank=True, db_column='Profile_Picture', null=True)),
                ('login_error_times', models.IntegerField(blank=True, db_column='Login_Error_Times', null=True)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('vote_id', models.AutoField(db_column='Vote_Id', primary_key=True, serialize=False)),
                ('vote_value', models.IntegerField(blank=True, choices=[(1, 'Bad'), (2, 'Neutral'), (3, 'Good')], db_column='Vote_Value', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('progress_status', models.TextField(blank=True, db_column='Progress_Status', null=True)),
                ('vote_comment', models.TextField(blank=True, db_column='Vote_Comment', null=True)),
            ],
            options={
                'db_table': 'Vote',
                'managed': False,
            },
        ),
    ]
